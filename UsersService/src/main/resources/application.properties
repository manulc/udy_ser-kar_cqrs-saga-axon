# Obtiene un puerto aleatorio disponible
server.port=0

spring.application.name=users-service

# Opcional porque, en este caso, nuestro servidor Eureka se ejecuta en el host y puerto por defecto
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
# Como ahora estamos usando el puerto 0 para generar puertos aleatorios disponibles para cada instancia de este microservicio,
# tenemos que usar esta propiedad para establecer un id único de registro en el servidor Eureka para cada instancia que se cree
# Si no hacemos esto, en Eureka únicamente se registrará la última instancia creada porque sobrescribe a las anteriores debido a que todas comparten el mismo nombre(product-service) y el mismo puerto(0)
# La segunda parte de este id único consite en utilizar el valor de la variable "instanceId" si existe o generar un valor númerico aleatorio de forma automática si no existe esa variable
eureka.instance.instance-id=${spring.application.name}:${instanceId:${random.value}}
#eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
